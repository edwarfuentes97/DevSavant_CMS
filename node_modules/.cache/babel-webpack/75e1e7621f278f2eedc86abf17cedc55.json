{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/file-upload.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/toolbar\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/list\";\nimport * as i9 from \"@angular/material/progress-bar\";\nimport * as i10 from \"@angular/material/core\";\n\nfunction WidgetImageComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-toolbar\", 9);\n    i0.ɵɵelement(4, \"mat-progress-bar\", 10);\n    i0.ɵɵelementStart(5, \"span\", 11);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const progressInfo_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(progressInfo_r4.fileName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", progressInfo_r4.value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", progressInfo_r4.value, \"%\");\n  }\n}\n\nfunction WidgetImageComponent_img_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 12);\n  }\n\n  if (rf & 2) {\n    const preview_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"src\", preview_r5, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction WidgetImageComponent_div_10_ul_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵelementStart(1, \"li\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const msg_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(msg_r7);\n  }\n}\n\nfunction WidgetImageComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, WidgetImageComponent_div_10_ul_1_Template, 3, 1, \"ul\", 0);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.message);\n  }\n}\n\nfunction WidgetImageComponent_mat_list_item_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list-item\", 14);\n    i0.ɵɵelementStart(1, \"p\", 15);\n    i0.ɵɵelementStart(2, \"a\", 16);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"img\", 17);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const image_r9 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"href\", image_r9.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(image_r9.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", image_r9.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵpropertyInterpolate(\"alt\", image_r9.name);\n  }\n}\n\nexport class WidgetImageComponent {\n  constructor(uploadService) {\n    this.uploadService = uploadService;\n    this.selectedFileNames = [];\n    this.progressInfos = [];\n    this.message = [];\n    this.previews = [];\n  }\n\n  ngOnInit() {\n    this.imageInfos = this.uploadService.getFiles();\n  }\n\n  selectFiles(event) {\n    this.message = [];\n    this.progressInfos = [];\n    this.selectedFileNames = [];\n    this.selectedFiles = event.target.files;\n    this.previews = [];\n\n    if (this.selectedFiles && this.selectedFiles[0]) {\n      const numberOfFiles = this.selectedFiles.length;\n\n      for (let i = 0; i < numberOfFiles; i++) {\n        const reader = new FileReader();\n\n        reader.onload = e => {\n          console.log(e.target.result);\n          this.previews.push(e.target.result);\n        };\n\n        reader.readAsDataURL(this.selectedFiles[i]);\n        this.selectedFileNames.push(this.selectedFiles[i].name);\n      }\n    }\n  }\n\n  uploadFiles(idx, file) {\n    this.progressInfos[idx] = {\n      value: 0,\n      fileName: file.name\n    };\n\n    if (file) {\n      const msg = 'Uploaded the file successfully: ' + file.name;\n      this.message.push(msg);\n      this.progressInfos[idx].value = Math.round(100 * 50 / 100);\n      this.uploadService.upload(file);\n    }\n  }\n\n}\n\nWidgetImageComponent.ɵfac = function WidgetImageComponent_Factory(t) {\n  return new (t || WidgetImageComponent)(i0.ɵɵdirectiveInject(i1.FileUploadService));\n};\n\nWidgetImageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: WidgetImageComponent,\n  selectors: [[\"app-widget-image\"]],\n  decls: 19,\n  vars: 8,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", 3, \"value\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"], [\"type\", \"file\", \"id\", \"fileInput\", \"name\", \"fileInput\", \"accept\", \"image/*\", \"multiple\", \"\", 3, \"change\"], [\"class\", \"preview\", 3, \"src\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"message\", 4, \"ngIf\"], [1, \"list-card\"], [\"role\", \"list\"], [\"role\", \"listitem\", \"class\", \"list-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"progress-bar\"], [\"color\", \"accent\", 3, \"value\"], [1, \"progress\"], [1, \"preview\", 3, \"src\"], [1, \"message\"], [\"role\", \"listitem\", 1, \"list-item\"], [\"matLine\", \"\"], [3, \"href\"], [\"height\", \"50px\", 3, \"src\", \"alt\"]],\n  template: function WidgetImageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, WidgetImageComponent_div_0_Template, 7, 3, \"div\", 0);\n      i0.ɵɵelementStart(1, \"mat-form-field\");\n      i0.ɵɵelementStart(2, \"div\");\n      i0.ɵɵelementStart(3, \"mat-toolbar\");\n      i0.ɵɵelement(4, \"input\", 1);\n      i0.ɵɵelementStart(5, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function WidgetImageComponent_Template_button_click_5_listener() {\n        return ctx.uploadFiles();\n      });\n      i0.ɵɵtext(6, \" Upload \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 3);\n      i0.ɵɵlistener(\"change\", function WidgetImageComponent_Template_input_change_7_listener($event) {\n        return ctx.selectFiles($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\");\n      i0.ɵɵtemplate(9, WidgetImageComponent_img_9_Template, 1, 1, \"img\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, WidgetImageComponent_div_10_Template, 2, 1, \"div\", 5);\n      i0.ɵɵelementStart(11, \"mat-card\", 6);\n      i0.ɵɵelementStart(12, \"mat-card-header\");\n      i0.ɵɵelementStart(13, \"mat-card-title\");\n      i0.ɵɵtext(14, \"List of Images\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"mat-card-content\");\n      i0.ɵɵelementStart(16, \"mat-list\", 7);\n      i0.ɵɵtemplate(17, WidgetImageComponent_mat_list_item_17_Template, 5, 4, \"mat-list-item\", 8);\n      i0.ɵɵpipe(18, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.progressInfos);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"value\", ctx.selectedFileNames.length ? ctx.selectedFileNames : \"Select Images\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.selectedFiles);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.previews);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.message.length);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(18, 6, ctx.imageInfos));\n    }\n  },\n  directives: [i2.NgForOf, i3.MatFormField, i4.MatToolbar, i5.MatInput, i6.MatButton, i2.NgIf, i7.MatCard, i7.MatCardHeader, i7.MatCardTitle, i7.MatCardContent, i8.MatList, i9.MatProgressBar, i8.MatListItem, i10.MatLine],\n  pipes: [i2.AsyncPipe],\n  styles: [\"[_nghost-%COMP%] {\\n  display: block;\\n}\\n\\n.progress-bar[_ngcontent-%COMP%] {\\n  padding: 0;\\n}\\n\\n.progress[_ngcontent-%COMP%] {\\n  width: 50px;\\n}\\n\\n.mat-input-element[_ngcontent-%COMP%] {\\n  font-size: medium;\\n  font-weight: 200;\\n}\\n\\n#fileInput[_ngcontent-%COMP%] {\\n  position: absolute;\\n  cursor: pointer;\\n  z-index: 10;\\n  opacity: 0;\\n  height: 100%;\\n  left: 0px;\\n  top: 0px;\\n}\\n\\n.mat-toolbar-single-row[_ngcontent-%COMP%] {\\n  height: auto !important;\\n  background: transparent;\\n  padding: 0;\\n}\\n\\n.mat-toolbar-single-row[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  width: 100px;\\n}\\n\\n.mat-form-field[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.message[_ngcontent-%COMP%] {\\n  background-color: #ddd;\\n  padding: 15px;\\n  color: #333;\\n  border: #aaa solid 1px;\\n  border-radius: 4px;\\n  margin: 15px 0;\\n}\\n\\n.preview[_ngcontent-%COMP%] {\\n  max-width: 200px;\\n  vertical-align: middle;\\n}\\n\\n.list-card[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n}\\n\\n.list-item[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndpZGdldC1pbWFnZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQUE7QUFDRjs7QUFFQTtFQUNFLFVBQUE7QUFDRjs7QUFFQTtFQUNFLFdBQUE7QUFDRjs7QUFFQTtFQUNFLGlCQUFBO0VBQ0EsZ0JBQUE7QUFDRjs7QUFFQTtFQUNFLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLFdBQUE7RUFDQSxVQUFBO0VBQ0EsWUFBQTtFQUNBLFNBQUE7RUFDQSxRQUFBO0FBQ0Y7O0FBRUE7RUFDRSx1QkFBQTtFQUNBLHVCQUFBO0VBQ0EsVUFBQTtBQUNGOztBQUVBO0VBQ0UsWUFBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtBQUNGOztBQUVBO0VBQ0Usc0JBQUE7RUFDQSxhQUFBO0VBQ0EsV0FBQTtFQUNBLHNCQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQkFBQTtFQUNBLHNCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQkFBQTtBQUNGOztBQUVBO0VBQ0UsbUJBQUE7QUFDRiIsImZpbGUiOiJ3aWRnZXQtaW1hZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ucHJvZ3Jlc3MtYmFyIHtcbiAgcGFkZGluZzogMDtcbn1cblxuLnByb2dyZXNzIHtcbiAgd2lkdGg6IDUwcHg7XG59XG5cbi5tYXQtaW5wdXQtZWxlbWVudCB7XG4gIGZvbnQtc2l6ZTogbWVkaXVtO1xuICBmb250LXdlaWdodDogMjAwO1xufVxuXG4jZmlsZUlucHV0IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHotaW5kZXg6IDEwO1xuICBvcGFjaXR5OiAwO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGxlZnQ6IDBweDtcbiAgdG9wOiAwcHg7XG59XG5cbi5tYXQtdG9vbGJhci1zaW5nbGUtcm93IHtcbiAgaGVpZ2h0OiBhdXRvICFpbXBvcnRhbnQ7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBwYWRkaW5nOiAwO1xufVxuXG4ubWF0LXRvb2xiYXItc2luZ2xlLXJvdyBidXR0b24ge1xuICB3aWR0aDogMTAwcHg7XG59XG5cbi5tYXQtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ubWVzc2FnZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkZGQ7XG4gIHBhZGRpbmc6IDE1cHg7XG4gIGNvbG9yOiAjMzMzO1xuICBib3JkZXI6ICNhYWEgc29saWQgMXB4O1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIG1hcmdpbjogMTVweCAwO1xufVxuXG4ucHJldmlldyB7XG4gIG1heC13aWR0aDogMjAwcHg7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbi5saXN0LWNhcmQge1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuXG4ubGlzdC1pdGVtIHtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cbiJdfQ== */\"]\n});","map":{"version":3,"sources":["/Users/edward.fuentes/Documents/Workspace/Personal/devSavantCms/src/app/components/widget-image/widget-image.component.ts","/Users/edward.fuentes/Documents/Workspace/Personal/devSavantCms/src/app/components/widget-image/widget-image.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {FileUploadService} from \"../../services/file-upload.service\";\n\n@Component({\n  selector: 'app-widget-image',\n  templateUrl: './widget-image.component.html',\n  styleUrls: ['./widget-image.component.scss']\n})\nexport class WidgetImageComponent implements OnInit {\n\n  selectedFiles?: FileList;\n  selectedFileNames: string[] = [];\n\n  progressInfos: any[] = [];\n  message: string[] = [];\n\n  previews: string[] = [];\n  imageInfos?: FormData;\n\n\n  constructor(private uploadService: FileUploadService) { }\n\n  ngOnInit(): void {\n    this.imageInfos = this.uploadService.getFiles();\n  }\n\n  selectFiles(event: any): void {\n    this.message = [];\n    this.progressInfos = [];\n    this.selectedFileNames = [];\n    this.selectedFiles = event.target.files;\n\n    this.previews = [];\n    if (this.selectedFiles && this.selectedFiles[0]) {\n      const numberOfFiles = this.selectedFiles.length;\n      for (let i = 0; i < numberOfFiles; i++) {\n        const reader = new FileReader();\n\n        reader.onload = (e: any) => {\n          console.log(e.target.result);\n          this.previews.push(e.target.result);\n        };\n\n        reader.readAsDataURL(this.selectedFiles[i]);\n\n        this.selectedFileNames.push(this.selectedFiles[i].name);\n      }\n    }\n  }\n\n  uploadFiles(idx: number, file: File): void {\n    this.progressInfos[idx] = { value: 0, fileName: file.name };\n\n    if (file) {\n      const msg = 'Uploaded the file successfully: ' + file.name;\n      this.message.push(msg);\n      this.progressInfos[idx].value = Math.round(100 * 50 / 100);\n      this.uploadService.upload(file)\n    }\n  }\n}\n","<div *ngFor=\"let progressInfo of progressInfos\">\n  <span>{{ progressInfo.fileName }}</span>\n  <mat-toolbar class=\"progress-bar\">\n    <mat-progress-bar\n      color=\"accent\"\n      [value]=\"progressInfo.value\"\n    ></mat-progress-bar>\n    <span class=\"progress\">{{ progressInfo.value }}%</span>\n  </mat-toolbar>\n</div>\n\n<mat-form-field>\n  <div>\n    <mat-toolbar>\n      <input matInput [value]=\"selectedFileNames.length ? selectedFileNames : 'Select Images'\" />\n\n      <button\n        mat-flat-button\n        color=\"primary\"\n        [disabled]=\"!selectedFiles\"\n        (click)=\"uploadFiles()\"\n      >\n        Upload\n      </button>\n    </mat-toolbar>\n\n    <input\n      type=\"file\"\n      id=\"fileInput\"\n      name=\"fileInput\"\n      accept=\"image/*\" multiple\n      (change)=\"selectFiles($event)\"\n    />\n  </div>\n</mat-form-field>\n\n<div>\n  <img *ngFor='let preview of previews' [src]=\"preview\" class=\"preview\">\n</div>\n\n<div *ngIf=\"message.length\" class=\"message\">\n  <ul *ngFor=\"let msg of message; let i = index\">\n    <li>{{ msg }}</li>\n  </ul>\n</div>\n\n<mat-card class=\"list-card\">\n  <mat-card-header>\n    <mat-card-title>List of Images</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <mat-list role=\"list\">\n      <mat-list-item role=\"listitem\" *ngFor=\"let image of imageInfos | async\" class=\"list-item\">\n        <p matLine><a href=\"{{ image.url }}\">{{ image.name }}</a></p>\n        <img src=\"{{ image.url }}\" alt=\"{{ image.name }}\" height=\"50px\"/>\n      </mat-list-item>\n    </mat-list>\n  </mat-card-content>\n</mat-card>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}